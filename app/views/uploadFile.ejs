<% include partials/header.ejs%>

  <main>
    <div class="container">
      <div class="center-align">
        <h3> Upload a new File </h1>
        </div>
          <hr>
        <form id="uploadForm" enctype="multipart/form-data" method="post" action="/admin/files/uploadFile">
          <div class="row">
            <div class="col s3">
              <div class="input-field ">
                <input name="className" required type="text" id="className" autocomplete="off" class="autocomplete validate">
                <label for="className">Class Name</label>
              </div>


            </div>

            <div class="col s3">
              <div class="input-field ">
                <input name="subjectName" required type="text" id="subjectName" autocomplete="off" class="autocomplete validate">
                <label for="subjectName">Subject Name</label>
              </div>
            </div>

            <div class="col s3">
              <div class="input-field ">
                <input name="chapterName" required type="text" id="chapterName" autocomplete="off" class="autocomplete validate">
                <label for="chapterName">Chapter Name</label>
              </div>
            </div>

            <div class="col s3">
              <div class="input-field ">
                <input name="topicName" required type="text" id="topicName" autocomplete="off" class="autocomplete validate">
                <label for="topicName">Topic Name</label>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col l6">
              <div class="file-field input-field">
                <div class="btn white green-text">
                  <span>File</span>
                  <input name="userFile" required type="file">
                </div>
                <div class="file-path-wrapper">
                  <input class="file-path validate" type="text">
                </div>
              </div>
            </div>

            <div class="col l3 col m6 col s12">
              <div class="form-group">
                <textarea required id="chapterDescription" name="chapterDescription" class="materialize-textarea validate"></textarea>
                <label for="chapterDescription">Chapter Description</label>
              </div>

            </div>
            <div class="col l3 col m6 col s12">
              <div class="form-group">
                <textarea required id="topicDescription" name="topicDescription" class="materialize-textarea validate"></textarea>
                <label for="topicDescription">Topic Description</label>
              </div>

            </div>
          </div>
          <div class="center-align">
            <input type="submit" name="submit" class="btn" />
          </div>
        </form>
      </div>


    </main>
    <script type="text/javascript">
      $(function () {

        function emptyInputField(toEmpty){
          $(toEmpty).val('')
          $(toEmpty).autocomplete({
         	    data: {},
         	    onAutocomplete: onSubjectSelect
       	  });
        }

        $('#className').on('focusout', function (e) {
          emptyInputField('#subjectName')
          onClassSelect()
        })

        $('#subjectName').on('focusout', function (e) {
          emptyInputField('#chapterName')
          onSubjectSelect()
        })

        $('#chapterName').on('focusout', function (e) {
          emptyInputField('#topicName')
          onChapterSelect()
        })

        function onChapterSelect(selectedChapterName) {
          let chapterName = selectedChapterName || $('#chapterName').val()
          if( chapterName.length > 0){
            $.get('/chapter/' + chapterName, function (res) {

             	topics = {};
             	if(res.chapter){
                res.chapter.topics.forEach((topic) => {
               		topics[topic.topicName] = null
               	})

                $('#chapterDescription').val(res.chapter.chapterDescription)
                $('#chapterDescription').trigger('autoresize');
              }

             	$('#topicName').autocomplete({
             	    data: topics,
             	    onAutocomplete: onTopicChange
           	  });
         	  });
          }
        }

        function onTopicChange(selectedTopicName) {
          let topicName = selectedTopicName || $('#chapterName').val()
          if( topicName.length > 0){
            $.get('/topic/' + topicName, function (res) {

             	if(res.topic){
                $('#topicDescription').val(res.topic.topicDescription)
                $('#topicDescription').trigger('autoresize');
              }
         	  });
          }
        }

        function onSubjectSelect(selectedSubjectName) {
         	//     onAutocomplete: onSubjectSelect
          let className = $('#className').val()
          let subjectName = selectedSubjectName || $('#subjectName').val()
          if(subjectName.length > 0 && className.length > 0){
            $.get('/class/' + className + '/subject/' + subjectName, function (res) {

             	chapters = {};

             	if(res.subject){
                res.subject.chapters.forEach((chapter) => {
               		chapters[chapter.chapterName] = null
               	})
              }

             	$('#chapterName').autocomplete({
             	    data: chapters,
                  onAutocomplete: onChapterSelect
           	  });
         	  });
          }
        }

        function onClassSelect(selectedClassName) {
          let className = selectedClassName || $('#className').val()
          if(className.length > 0 ){
            $.get('/class/' + className, function (res) {

             	subjects = {};
             	if(res.classs){
                res.classs.subjects.forEach((subject) => {
               		subjects[subject.subjectName] = null
               	})
              }

             	$('#subjectName').autocomplete({
             	    data: subjects,
             	    onAutocomplete: onSubjectSelect
           	  });
         	  });
          }
        }

        $.get('/classes', function (res) {

         	classes = {};

         	if(res.classes){
            res.classes.forEach((classs) => {
           		classes[classs.className] = null
           	})
          }

         	$('#className').autocomplete({
         	    data: classes,
         	    onAutocomplete: onClassSelect
         	  });
         })
      })
    </script>
    <% include partials/footer.ejs%>
